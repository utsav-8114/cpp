#include<bits/stdc++.h>
using namespace std;
class heap{
    public:
    int size;
    int arr[100];
    heap(){
        size=0;
        arr[0]=-1;
    }
    void insertion(int value){
        size++;
        int index=size;
        arr[index]=value;
        while(index>1){
            int parent=index/2;
            if(arr[parent]<arr[index]){
                swap(arr[parent],arr[index]);
                parent=index;
                
            }else{
                return;
            }
        }
    }
    void heapify(int i){
        int largest=i;
        int left=2*i;
        int right=2*i+1;
        if(left<size and arr[largest]<arr[left]){
            largest=left;
        }
        if(right<size and arr[largest]<arr[right]){
            largest=right;
        }
        if(largest!=i){
            swap(arr[largest],arr[i]);
            heapify(largest);
        }
    }
    void buildHeapify(){
        for(int i=1;i>0;i--){
            heapify(i);
        }
        cout<<"printing the array now"<<endl;
        for(int i=1;i<size;i++){
            cout<<arr[i]<<" ";
        } cout<<endl;
    }
};
int main(){
    heap h;
    h.insertion(50);
    h.insertion(55);
    h.insertion(53);
    h.insertion(52);
    h.insertion(47);
    h.insertion(75);
    h.insertion(73);
    h.buildHeapify();
    return 0;
}
